
:root {
	--header-height: 60px;
}

.dashboard {
	display: flex;
	flex-direction: column;
	gap: var(--page-gap);
	padding: var(--page-padding);
	flex: 1;
	overflow-y: auto;
	overflow-x: hidden;
	/* Enable pull-to-refresh on mobile */
	-webkit-overflow-scrolling: touch;
	overscroll-behavior-y: auto;
}

/* Floating Action Buttons */
.floatingActionButtons {
	position: fixed;
	bottom: 2rem;
	right: 2rem;
	z-index: 15;
	display: flex;
	flex-direction: column;
	gap: 1rem;
	align-items: flex-end;
}

.floatingActionButtons > button {
	width: 56px;
	height: 56px;
	border-radius: 50%;
	background: var(--mainColor);
	border: none;
	color: #fff;
	box-shadow: 0 4px 12px rgba(79, 70, 229, 0.3);
	display: flex;
	align-items: center;
	justify-content: center;
	padding: 0;
	cursor: pointer;
}

/* Don't override RefreshButton styling */
.floatingActionButtons .refreshButton {
	background: var(--glassBackground, rgba(255, 255, 255, 0.1)) !important;
	border: 1px solid var(--glassStroke, rgba(255, 255, 255, 0.2)) !important;
	backdrop-filter: blur(10px);
}

.floatingActionButtons > button:disabled {
	opacity: 0.6;
	cursor: not-allowed;
}

.floatingActionButtons .refreshIcon {
	font-size: 1.4rem;
	font-weight: 600;
}

.floatingActionButtons .spinning {
	animation: spin 1s linear infinite;
}

@keyframes spin {
	from { transform: rotate(0deg); }
	to { transform: rotate(360deg); }
}

/* Hide text on refresh button - icon only */
.floatingActionButtons > button > span:not(.refreshIcon) {
	display: none;
}

/* Mobile responsive */
.mobileOnly {
	display: none;
}

@media (max-width: 768px) {
	.mobileOnly {
		display: block;
	}
}

.header {
	display: flex;
	flex-direction: column;
	gap: 0.35rem;
}

.title {
	font-size: 2rem;
	font-weight: 700;
	color: #fff;
	margin: 0;
}

.subtitle {
	font-size: 1rem;
	color: rgba(255, 255, 255, 0.7);
	margin: 0.25rem 0 0;
}

.summaryGrid {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
	gap: 1.2rem;
}

.statCard {
	background:
		linear-gradient(180deg, rgba(255, 255, 255, 0.06) 0%, rgba(255, 255, 255, 0.03) 100%),
		var(--glassBackground);
	border: 1px solid var(--glassStroke);
	border-radius: calc(var(--border-radius) + 4px);
	padding: 1.1rem;
	display: grid;
	grid-template-columns: auto 1fr;
	grid-template-rows: auto auto;
	grid-column-gap: 1rem;
	grid-row-gap: 0.35rem;
	align-items: center;
	text-align: left;
	transition: border-color 0.2s ease, background-color 0.2s ease;
}
.statCard:hover { border-color: var(--mainColor); }

/* Hover removed */

.statIcon {
	grid-row: 1 / span 2;
	font-size: 1.35rem;
	width: 48px;
	height: 48px;
	display: grid;
	place-items: center;
	border-radius: 12px;
	background: rgba(255, 255, 255, 0.08);
	color: rgba(255, 255, 255, 0.95);
	border: 1px solid rgba(255, 255, 255, 0.12);
}

.statCard[data-type="net"][data-positive="true"] .statIcon { color: var(--goodColor) !important; }
.statCard[data-type="net"][data-positive="false"] .statIcon { color: var(--badColor) !important; }
.statCard[data-type="owing"] .statIcon { color: var(--badColor) !important; }
.statCard[data-type="owed"] .statIcon { color: var(--goodColor) !important; }

.statCard[data-type="net"][data-positive="true"] .statValue {
	color: var(--goodColor) !important;
}
.statCard[data-type="net"][data-positive="false"] .statValue {
	color: var(--badColor) !important;
}

.statContent {
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 0.5rem;
}

.statLabel {
	font-size: 0.75rem;
	color: rgba(255, 255, 255, 0.65);
	text-transform: uppercase;
	letter-spacing: 0.55px;
}

.statValue {
	font-size: 1.7rem;
	font-weight: 600;
	color: #fff;
	line-height: 1.1;
	margin-top: 0.1rem;
}



.statSub {
	font-size: 0.75rem;
	color: rgba(255, 255, 255, 0.6);
}

.mainContent {
	display: grid;
	grid-template-columns: 1fr 1fr;
	gap: var(--page-gap);
	min-width: 0;
}

.panel {
	background: var(--glassBackground);
	border: 1px solid var(--glassStroke);
	border-radius: var(--border-radius);
	padding: 1.25rem;
	display: flex;
	flex-direction: column;
	gap: 1rem;
	min-width: 0;
}

/* Positive variant for informational incoming money (greens) */
.panelPositive .cardTotal,
.panelPositive .itemShare {
	color: var(--goodColor);
}
.panelPositive .btnIcon {
	background: rgba(var(--goodColor-rgb), 0.2);
	color: var(--goodColor);
}
.panelPositive .itemRow { background: rgba(0, 128, 0, 0.12); }

/* Stack spacing helper to separate stacked sections inside one column */
.stackGap { margin-top: 1rem; }

.panelTitle {
	margin: 0;
	font-size: 1.25rem;
	font-weight: 600;
	color: #fff;
	padding-bottom: 0.75rem;
	border-bottom: 1px solid var(--glassStroke);
}

.empty {
	margin: 0;
	color: rgba(255, 255, 255, 0.6);
	font-size: 0.9rem;
	text-align: center;
	padding: 2rem 0;
}

/* Net Balances & Pending Payments Lists */
.netList,
.pendingGrid {
	list-style: none;
	margin: 0;
	padding: 0;
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
}

.netRow {
	display: grid;
	grid-template-columns: auto 1fr auto auto;
	align-items: center;
	gap: 0.75rem;
	padding: 0.75rem 0.75rem 0.75rem 0.9rem;
	border-radius: 0.5rem;
	background: rgba(255, 255, 255, 0.03);
	position: relative;
	cursor: pointer;
	transition: background-color 0.15s ease, border-color 0.15s ease;
}
.netRow:hover { background: rgba(255, 255, 255, 0.05); }

/* Hover removed */

.netAccent {
	position: absolute;
	left: 0;
	top: 10%;
	bottom: 10%;
	width: 4px;
	background: var(--mainColor);
	border-radius: 4px;
}
.netRow[data-positive="true"] .netAccent {
	background: var(--goodColor) !important;
}
.netRow[data-positive="false"] .netAccent {
	background: var(--badColor) !important;
}

.netAvatar {
	width: 34px;
	height: 34px;
	border-radius: 50%;
	background: rgba(255, 255, 255, 0.08);
	display: inline-grid;
	place-items: center;
	font-weight: 700;
	font-size: 0.9rem;
}

.netMemberInfo {
	display: flex;
	flex-direction: column;
	gap: 0.25rem;
	padding-left: 1rem;
    min-width: 0;
}

.netName {
	font-weight: 600;
	color: #fff;
    min-width: 0;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.netBreakdown {
	display: flex;
	gap: 0.5rem;
	font-size: 0.8rem;
    flex-wrap: wrap;
}

.positive {
	color: var(--goodColor);
}
.negative {
	color: var(--badColor);
}

.netTotal {
	font-size: 1.25rem;
	font-weight: 550;
}
.netTotal[data-positive="true"] {
	color: var(--goodColor) !important;
}
.netTotal[data-positive="false"] {
	color: var(--badColor) !important;
}

.netActions {
	display: flex;
	align-items: center;
}

/* Pending Payments */
.pendingGrid {
	gap: 1rem;
}

.card {
	background: rgba(255, 255, 255, 0.04);
	border: 1px solid rgba(255, 255, 255, 0.1);
	border-radius: 0.6rem;
	padding: 1rem;
	display: flex;
	flex-direction: column;
	gap: 0.75rem;
	transition: border-color 0.2s ease, background-color 0.2s ease;
}
.card:hover { border-color: var(--mainColor); }

.cardHeader {
	display: flex;
	justify-content: space-between;
	align-items: center;
}

.cardTitle {
	margin: 0;
	font-size: 1rem;
	font-weight: 600;
	color: #fff;
}

.itemList {
	list-style: none;
	margin: 0;
	padding: 0;
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
}

.itemRow {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 0.5rem;
	border-radius: 0.35rem;
	background: rgba(0, 0, 0, 0.1);
}

.itemName {
	font-size: 0.9rem;
	color: rgba(255, 255, 255, 0.9);
    min-width: 0;
    overflow: hidden;
    text-overflow: ellipsis;
}

.itemDetails {
	display: flex;
	align-items: center;
	gap: 0.5rem;
}

.itemShare {
	font-weight: 600;
	color: var(--badColor);
}


.itemOfTotal {
	font-size: 0.75rem;
	color: rgba(255, 255, 255, 0.5);
}

.cardFooter {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding-top: 0.75rem;
	margin-top: 0.25rem;
	border-top: 1px solid var(--glassStroke);
	font-weight: 600;
}

.cardTotal {
	font-size: 1.1rem;
	color: var(--badColor);
}

/* Buttons */
.btnPrimary,
.btnGhost,
.btnSmall,
.btnIcon {
	font: inherit;
	border: none;
	cursor: pointer;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	gap: 0.4rem;
	border-radius: 0.45rem;
	line-height: 1;
	padding: 0.5rem 0.8rem;
	font-size: 0.8rem;
	font-weight: 600;
	transition: all var(--transition-base);
}
.btnPrimary, .btnGhost, .btnIcon { transition: background-color 0.12s ease, border-color 0.12s ease; }

.btnPrimary {
	background: var(--mainColor);
	color: #fff;
}
/* Hover removed */

.btnGhost {
	background: rgba(255, 255, 255, 0.1);
	color: #fff;
}
/* Hover removed */

.btnSmall {
	padding: 0.4rem 0.6rem;
	font-size: 0.75rem;
	background: rgba(var(--mainColor-rgb), 0.2);
	color: var(--mainColor);
}
/* Hover removed */

.btnIcon {
	padding: 0.4rem;
	background: rgba(var(--badColor-rgb), 0.2);
	color: var(--badColor);
}
/* Hover removed */

/* Settlement Buttons */
.settlePending,
.settleIncoming {
	display: flex;
	flex-direction: column;
	gap: 1rem;
	font-size: 0.85rem;
	padding: 0.75rem 0;
}
.settleIncoming {
	align-items: stretch;
}

.settleIncoming > div {
	display: flex;
	gap: 0.75rem;
}

/* Modal */
.modalOverlay {
	position: fixed;
	inset: 0;
	background: rgba(0, 0, 0, 0.6);
	backdrop-filter: blur(5px);
	display: flex;
	align-items: center;
	justify-content: center;
	z-index: 1000;
	padding: 1rem;
	animation: fadeIn 0.2s ease;
}

.modal {
	background: linear-gradient(160deg, rgba(7, 54, 80, 0.65) 0%, rgba(25, 36, 50, 0.45) 100%), var(--glassBackground);
	border: 1px solid var(--glassStroke);
	backdrop-filter: blur(10px);
	border-radius: var(--border-radius-lg);
	width: min(500px, 100%);
	max-height: 90vh;
	display: flex;
	flex-direction: column;
	box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
}

.modalHeader {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 1rem 1.25rem;
	border-bottom: 1px solid var(--glassStroke);
}

.modalTitle {
	margin: 0;
	font-size: 1.1rem;
	font-weight: 600;
	color: #fff;
}

.modalClose {
	background: none;
	border: none;
	color: rgba(255, 255, 255, 0.6);
	font-size: 1.5rem;
	cursor: pointer;
}

.modalSummary {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	gap: 1rem;
	padding: 1rem 1.25rem;
	background: rgba(0, 0, 0, 0.1);
	text-align: center;
}

.modalStat {
	display: flex;
	flex-direction: column;
	gap: 0.25rem;
}
.modalStat span {
	font-size: 0.8rem;
	color: rgba(255, 255, 255, 0.6);
}
.modalStat strong {
	font-size: 1.25rem;
	font-weight: 600;
}

.modalSummary .modalStat strong.positive { color: var(--goodColor); }
.modalSummary .modalStat strong.negative { color: var(--badColor); }

.modalStat strong.positive {
	color: var(--goodColor);
}
.modalStat strong.negative {
	color: var(--badColor);
}

.modalItemList {
	list-style: none;
	margin: 0;
	padding: 1rem 1.25rem;
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
	overflow-y: auto;
	flex: 1;
    -webkit-overflow-scrolling: touch;
}

.modalItem {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 0.75rem;
	border-radius: 0.5rem;
	background: rgba(255, 255, 255, 0.03);
}

.modalItemDetails {
	display: flex;
	align-items: center;
	gap: 0.75rem;
}

.itemDirection {
	font-size: 0.8rem;
	font-weight: 600;
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

/* Mobile Responsive */
@media (max-width: 768px) {
  .dashboard {
    padding: var(--page-padding);
    gap: var(--page-gap);
    padding-bottom: calc(var(--page-padding) + env(safe-area-inset-bottom, 0px));
  }

  .title { font-size: 1.75rem; }
  .subtitle { font-size: 0.9rem; }

  .summaryGrid { grid-template-columns: 1fr; gap: var(--card-gap); margin-bottom: var(--page-gap); }
  .statCard { padding: 0.9rem; }
  .statIcon { font-size: 1rem; width: 36px; height: 36px; }
  .statValue { font-size: 1.35rem; }

  .mainContent { grid-template-columns: 1fr; gap: var(--page-gap); }
  .panel { padding: 0.9rem 1rem; }
  .panelTitle { font-size: 1.05rem; }

  /* Net rows */
  .netRow {
    grid-template-columns: auto 1fr auto;
    grid-template-areas: 
      "avatar member total"
      ". actions actions";
    gap: 0.6rem;
    padding: 0.85rem 0.85rem 0.9rem 0.95rem;
    align-items: center;
    overflow: hidden;
  }
  .netAvatar { grid-area: avatar; }
  .netMemberInfo { grid-area: member; padding-left: 0.5rem; }
  .netTotal { grid-area: total; text-align: right; font-size: 1.15rem; }
  .netActions { grid-area: actions; padding-top: 0.35rem; margin-top: 0; border-top: none; justify-content: flex-end; flex-wrap: wrap; gap: 0.5rem; }
  .netTotal[data-positive="true"] { color: var(--goodColor); }
  .netTotal[data-positive="false"] { color: var(--badColor); }

  .settlePending, .settleIncoming { width: 100%; gap: 0.75rem; padding: 0.5rem 0; }
  .settleIncoming > div { gap: 0.5rem; flex-wrap: wrap; }
  .settlementCard { padding: 0.75rem; }
  .settlementStats { gap: 1rem; }
  .settlementActions { flex-direction: column; gap: 0.5rem; }
  .settlementActions .btnPrimary,
  .settlementActions .btnGhost { flex: 1; }

  .card { gap: 0.6rem; }
  .itemRow { padding: 0.55rem 0.6rem; }
  .itemDetails { flex-wrap: wrap; }

  /* Modal adjustments */
  .modalOverlay { padding: 0.6rem; }
  .modal { width: 100%; max-height: 100vh; border-radius: var(--border-radius); }
  .modalHeader { padding: 0.85rem 1rem; }
  .modalSummary { grid-template-columns: repeat(3, minmax(0,1fr)); gap: var(--card-gap); padding: var(--card-padding) 1rem; }
  .modalItemList { padding: 0.7rem 0.95rem 1rem; }
  .modalStat strong { font-size: 1.15rem; }
}

/* Extra small screens */
@media (max-width: 480px) {
  .title { font-size: 1.55rem; }
  .statValue { font-size: 1.35rem; }
  .modalSummary { grid-template-columns: repeat(2, 1fr); }
  .netRow { 
    grid-template-columns: auto 1fr auto;
    grid-template-areas: 
      "avatar member total"
      ". actions actions";
  }
  .netTotal { font-size: 1.05rem; }
  .panelTitle { font-size: 1rem; }
  .itemDetails { width: 100%; }
}

/* Pending item row grid for better structure and larger Pay button */
.itemRow {
	display: grid;
	grid-template-columns: 1fr auto;
	grid-template-rows: auto auto;
	grid-template-areas: 
		"name pay"
		"details pay";
	gap: 0.35rem 0.75rem;
	align-items: center;
}
.itemName { grid-area: name; }
.itemDetails { grid-area: details; }
.itemPay { grid-area: pay; display: flex; align-items: center; }
.itemPay .btnIcon {
	width: 44px;
	height: 44px;
	font-size: 1rem;
	padding: 0.5rem;
}

/* Countdown and Selection Styles */
.countdownContainer {
	display: flex;
	align-items: center;
	gap: 0.75rem;
	padding: 0.75rem;
	background: rgba(255, 193, 7, 0.1);
	border: 1px solid rgba(255, 193, 7, 0.3);
	border-radius: 0.5rem;
	margin: 0.5rem 0;
}

.countdownIndicator {
	position: relative;
}

.countdownCircle {
	width: 40px;
	height: 40px;
	border-radius: 50%;
	background: #ffc107;
	border: 2px solid #ffc107;
	display: flex;
	align-items: center;
	justify-content: center;
	animation: pulse 2s infinite;
}

.countdownTime {
	color: #000;
	font-weight: 700;
	font-size: 0.9rem;
}

.countdownText {
	display: flex;
	flex-direction: column;
	gap: 0.125rem;
}

.countdownLabel {
	font-weight: 600;
	color: #ffc107;
	font-size: 0.9rem;
}

.countdownSubtext {
	font-size: 0.8rem;
	color: rgba(255, 255, 255, 0.7);
}

.awaitingApproval {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: 1rem;
	margin-top: 0.75rem;
	padding: 0.5rem;
	background: rgba(255, 193, 7, 0.05);
	border-radius: 0.375rem;
}

.selectedItem {
	background: rgba(79, 70, 229, 0.1);
	border-left: 3px solid var(--mainColor);
}

.selectedIndicator {
	display: flex;
	align-items: center;
	gap: 0.5rem;
	color: var(--mainColor);
	font-size: 0.8rem;
	font-weight: 600;
}

.selectedDot {
	width: 8px;
	height: 8px;
	border-radius: 50%;
	background: var(--mainColor);
	animation: pulse 2s infinite;
}

.selectedText {
	color: var(--mainColor);
}

@keyframes pulse {
	0%, 100% {
		opacity: 1;
		transform: scale(1);
	}
	50% {
		opacity: 0.7;
		transform: scale(1.05);
	}
}
