.dashboard {
	display: flex;
	flex-direction: column;
	gap: 1rem;
	padding: 1rem;
	overflow-y: auto;
}
.summaryBar {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(8rem, 1fr));
	gap: 0.75rem;
	background: var(--glassBackground);
	border: 1px solid var(--glassStroke);
	padding: 0.75rem 1rem;
	border-radius: 0.75rem;
}
/* New stats style summary grid (replaces summaryBar in JSX) */
.summaryGrid {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
	gap: 1rem;
}

.statCard {
	background: var(--glassBackground);
	border: 1px solid var(--glassStroke);
	border-radius: 1rem;
	padding: 1rem 1.25rem;
	display: flex;
	flex-direction: column;
	gap: 0.4rem;
	position: relative;
	overflow: hidden;
	transition: 0.25s border, 0.25s transform, 0.25s box-shadow;
}
.statCard:before {
	content: "";
	position: absolute;
	inset: 0;
	background: radial-gradient(circle at 30% 20%, rgba(255, 255, 255, 0.06), transparent 70%);
	opacity: 0.7;
	pointer-events: none;
}
.statCard:hover {
	border-color: var(--mainColor);
	transform: translateY(-2px);
	box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25);
}
.statLabel {
	font-size: 0.65rem;
	letter-spacing: 0.05em;
	text-transform: uppercase;
	color: rgba(255, 255, 255, 0.55);
	font-weight: 600;
}
.statNumber {
	font-size: 2rem;
	font-weight: 700;
	letter-spacing: -0.5px;
	line-height: 1.05;
	color: var(--mainColor);
}
.statSub {
	font-size: 0.65rem;
	color: rgba(255, 255, 255, 0.45);
}
.statCard[data-type="owing"] .statNumber {
	color: var(--badColor);
	font-weight: 500;
}
.statCard[data-type="owed"] .statNumber {
	color: var(--goodColor);
	font-weight: 500;
}
.statCard[data-type="net"][data-positive="true"] .statNumber {
	color: var(--goodColor);
}
.statCard[data-type="net"][data-positive="false"] .statNumber {
	color: var(--badColor);
}
.statDelta {
	font-size: 0.65rem;
	font-weight: 600;
	color: rgba(255, 255, 255, 0.6);
}
.metric {
	display: flex;
	flex-direction: column;
	gap: 0.1rem;
}
.metricLabel {
	font-size: 0.65rem;
	letter-spacing: 0.05em;
	text-transform: uppercase;
	color: rgba(255, 255, 255, 0.55);
}
.metricValue {
	font-size: 1.1rem;
	font-weight: 600;
	color: #fff;
}
.metricValueLg {
	font-size: 1.6rem;
	font-weight: 700;
	letter-spacing: -0.5px;
	display: inline-flex;
	align-items: center;
	gap: 0.35rem;
}
.metricAccent {
	display: flex;
	flex-direction: column;
	justify-content: center;
	position: relative;
	padding: 0.4rem 0.75rem;
	border-radius: 0.5rem;
	background: rgba(255, 255, 255, 0.06);
	border: 1px solid rgba(255, 255, 255, 0.15);
}
.metricAccent[data-positive="false"] {
	background: rgba(var(--badColor-rgb), 0.08);
}
.metricValue[data-positive="true"] {
	color: var(--goodColor);
}
.middle {
	background: var(--glassBackground);
	border: 1px solid var(--glassStroke);
	border-radius: 0.75rem;
	padding: 1rem;
	display: flex;
	flex-direction: column;
	gap: 1rem;
	min-height: 12rem;
}
.title {
	margin: 0;
	font-size: 1.25rem;
	font-weight: 600;
	color: #fff;
}
.empty {
	margin: 0;
	color: rgba(255, 255, 255, 0.6);
	font-size: 0.9rem;
}
.panel {
	background: var(--glassBackground);
	border: 1px solid var(--glassStroke);
	border-radius: 0.75rem;
	padding: 1rem;
	display: flex;
	flex-direction: column;
	gap: 1rem;
}
.panelTitle {
	margin: 0;
	font-size: 1.15rem;
	font-weight: 600;
	color: #fff;
	letter-spacing: -0.5px;
	display: flex;
	align-items: center;
	gap: 0.5rem;
}
.card {
	display: flex;
	flex-direction: column;
	gap: 0.65rem;
	padding: 0.75rem 0.9rem;
	border: 1px solid rgba(255, 255, 255, 0.08);
	border-radius: 0.6rem;
	background: rgba(255, 255, 255, 0.02);
}
.cardHead {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: 0.5rem;
}
.cardTitle {
	margin: 0;
	font-size: 0.95rem;
	font-weight: 600;
	color: #fff;
}
.itemList {
	list-style: none;
	margin: 0;
	padding: 0;
	display: flex;
	flex-direction: column;
	gap: 0.6rem;
}
.itemRow {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: 0.75rem;
	font-size: 0.8rem;
	padding: 0.5rem 0.7rem;
	border: 1px solid rgba(255, 255, 255, 0.1);
	border-radius: 0.5rem;
	background: rgba(255, 255, 255, 0.04);
	position: relative;
	overflow: hidden;
	transition: 0.2s border-color, 0.2s background;
}

.itemRow:hover {
	border-color: rgba(255, 255, 255, 0.18);
	background: rgba(255, 255, 255, 0.06);
}

.itemRow::before {
	content: "";
	position: absolute;
	left: 0;
	top: 0;
	bottom: 0;
	width: 3px;
	background: var(--badColor);
	opacity: 0.6;
	transition: 0.2s width, 0.2s opacity;
}

.itemRow:hover::before {
	width: 4px;
	opacity: 0.8;
}
.itemName {
	font-size: 0.85rem;
	font-weight: 500;
	color: #fff;
	flex: 1;
	min-width: 0;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}
.itemMoney {
	display: flex;
	align-items: center;
	gap: 0.5rem;
	font-size: 0.7rem;
	color: rgba(255, 255, 255, 0.65);
	flex-shrink: 0;
}
.share {
	font-size: 0.85rem;
	font-weight: 600;
	color: var(--badColor);
	text-shadow: 0 0 4px rgba(var(--badColor-rgb), 0.2);
}
.ofTotal {
	opacity: 0.55;
}
.cardFoot {
	margin-top: 0.25rem;
	padding-top: 0.4rem;
	border-top: 1px solid rgba(255, 255, 255, 0.08);
	display: flex;
	justify-content: space-between;
	font-size: 1rem;
	color: rgba(255, 255, 255, 0.65);
}
.totalOwing {
	font-size: 1.25rem;
	font-weight: 700;
	color: var(--badColor);
}
.netList {
	list-style: none;
	margin: 0;
	padding: 0;
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
}
.netPanel {
	position: relative;
}
.netList {
	position: relative;
}
.netRow {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 0.65rem 0.85rem;
	border: 1px solid rgba(255, 255, 255, 0.12);
	border-radius: 0.6rem;
	background: rgba(255, 255, 255, 0.03);
	font-size: 0.85rem;
	gap: 0.75rem;
	position: relative;
	overflow: hidden;
}
.netRow:hover {
	border-color: rgba(255, 255, 255, 0.2);
}
.netAccent {
	position: absolute;
	left: 0;
	top: 0;
	bottom: 0;
	width: 4px;
	background: var(--badColor);
	opacity: 0.55;
	transition: 0.25s;
}
.netRow[data-positive="true"] .netAccent {
	background: var(--goodColor);
}
.netRow:hover .netAccent {
	width: 6px;
}
.netRow[data-positive="true"] {
	border-color: rgba(var(--goodColor-rgb), 0.35);
}
.netLeft {
	display: flex;
	flex-direction: column;
	gap: 0.15rem;
}
.netName {
	font-size: 0.95rem;
	font-weight: 600;
	color: #fff;
	letter-spacing: 0.2px;
}
.netAmount {
	font-size: 0.95rem;
	font-weight: 600;
	color: var(--badColor);
	text-shadow: 0 0 4px rgba(0, 0, 0, 0.35);
}
.netFigures {
	display: flex;
	gap: 0.75rem;
	margin-top: 0.15rem;
}
.figure {
	display: flex;
	flex-direction: column;
	gap: 0.1rem;
}
.figLabel {
	font-size: 0.6rem;
	letter-spacing: 0.05em;
	text-transform: uppercase;
	color: rgba(255, 255, 255, 0.45);
}
.figValue {
	font-size: 1.05rem;
	font-weight: 600;
	color: #fff;
}
.figTotalPositive {
	color: var(--goodColor);
	font-weight: 800;
	text-shadow: 0 0 4px rgba(var(--goodColor-rgb), 0.35);
}
.figTotalNegative {
	color: var(--badColor);
	font-weight: 800;
	text-shadow: 0 0 4px rgba(var(--badColor-rgb), 0.35);
}
.positive {
	color: var(--goodColor);
}
.negative {
	color: var(--badColor);
}
.netRow[data-positive="true"] .netAmount {
	color: var(--goodColor);
}
.netActions {
	display: flex;
	align-items: center;
	gap: 0.4rem;
}
.settlePending,
.settleIncoming {
	display: flex;
	align-items: center;
	gap: 0.4rem;
}
.btnPrimary,
.btnGhost,
.btnSmall,
.btnIcon {
	font: inherit;
	border: none;
	cursor: pointer;
	display: inline-flex;
	align-items: center;
	gap: 0.35rem;
	border-radius: 0.45rem;
	line-height: 1;
}
.btnPrimary {
	background: var(--mainColor);
	color: #fff;
	padding: 0.5rem 0.85rem;
	font-size: 0.7rem;
	font-weight: 600;
	box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.35);
	transition: 0.2s;
}
.btnPrimary:hover {
	background: var(--mainColorHover, #2563eb);
}
.btnGhost {
	background: rgba(255, 255, 255, 0.08);
	color: #fff;
	padding: 0.4rem 0.6rem;
	font-size: 0.6rem;
}
.btnGhost:hover {
	background: rgba(255, 255, 255, 0.15);
}
.btnSmall {
	background: rgba(var(--badColor-rgb), 0.6);
	color: #fff;
	padding: 0.45rem 0.65rem;
	font-size: 0.65rem;
	font-weight: 600;
}
.btnSmall:hover {
	background: rgba(var(--badColor-rgb), 0.75);
}
.btnIcon {
	background: rgba(var(--badColor-rgb), 0.55);
	color: #fff;
	padding: 0.4rem 0.5rem;
	font-size: 0.65rem;
	border: 1px solid rgba(255, 255, 255, 0.15);
}
.btnIcon:hover {
	background: rgba(var(--badColor-rgb), 0.7);
}
.btnIcon svg {
	font-size: 0.8rem;
}
/* Modal */
.modalOverlay {
	position: fixed;
	inset: 0;
	background: rgba(0, 0, 0, 0.55);
	display: flex;
	align-items: center;
	justify-content: center;
	z-index: 1000;
	padding: 1rem;
}
.modal {
	background: var(--glassBackground);
	border: 1px solid var(--glassStroke);
	border-radius: 0.9rem;
	width: min(560px, 100%);
	max-height: 80vh;
	display: flex;
	flex-direction: column;
	padding: 1rem 1.1rem 1.25rem;
	gap: 0.75rem;
	backdrop-filter: blur(10px);
	animation: fadeIn 0.25s ease;
}
.modalHeader {
	display: flex;
	justify-content: space-between;
	align-items: center;
}
.modalTitle {
	margin: 0;
	font-size: 1.15rem;
	font-weight: 600;
	color: #fff;
}
.modalClose {
	background: none;
	border: none;
	color: #fff;
	font-size: 1.4rem;
	line-height: 1;
	cursor: pointer;
}
.modalSummary {
	border-bottom: 1px solid var(--glassStroke);
	padding-bottom: 0.5rem;
}
.modalStats {
	display: flex;
	gap: 1rem;
}
.mStat {
	display: flex;
	flex-direction: column;
	gap: 0.15rem;
	font-size: 0.65rem;
	color: rgba(255, 255, 255, 0.6);
}
.mStat strong {
	font-size: 0.95rem;
	font-weight: 600;
	color: #fff;
}
.mStat strong.positive {
	color: var(--goodColor);
}
.mStat strong.negative {
	color: var(--badColor);
}
.modalItems {
	list-style: none;
	margin: 0;
	padding: 0;
	display: flex;
	flex-direction: column;
	gap: 0.4rem;
	overflow-y: auto;
}
.modalItem {
	display: grid;
	grid-template-columns: 1fr auto auto;
	align-items: center;
	gap: 0.85rem;
	padding: 0.6rem 0.7rem;
	border: 1px solid rgba(255, 255, 255, 0.1);
	border-radius: 0.55rem;
	background: rgba(255, 255, 255, 0.04);
	font-size: 0.8rem;
}
.modalItem[data-direction="theyOwe"] {
	border-color: rgba(var(--goodColor-rgb), 0.4);
}
.modalItem[data-direction="youOwe"] {
	border-color: rgba(var(--badColor-rgb), 0.45);
}
.itemShare {
	font-weight: 600;
	font-size: 0.85rem;
}
.itemDirection[data-direction="theyOwe"] {
	color: var(--goodColor);
	font-weight: 600;
	font-size: 0.7rem;
}
.itemDirection[data-direction="youOwe"] {
	color: var(--badColor);
	font-weight: 600;
	font-size: 0.7rem;
}
@keyframes fadeIn {
	from {
		opacity: 0;
		transform: translateY(4px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}
.settlePending span {
	font-size: 0.7rem;
	color: rgba(255, 255, 255, 0.8);
	font-weight: 600;
	position: relative;
	padding-left: 0.9rem;
}
.settlePending span:before {
	content: "";
	position: absolute;
	left: 0;
	top: 50%;
	width: 0.55rem;
	height: 0.55rem;
	border-radius: 50%;
	background: linear-gradient(90deg, var(--mainColor), var(--goodColor));
	transform: translateY(-50%);
	animation: pulseDot 1.4s ease-in-out infinite;
}
@keyframes pulseDot {
	0% {
		transform: translateY(-50%) scale(1);
		opacity: 0.9;
	}
	60% {
		transform: translateY(-50%) scale(1.5);
		opacity: 0;
	}
	100% {
		transform: translateY(-50%) scale(1);
		opacity: 0;
	}
}
.settleIncoming button {
	font-size: 0.6rem;
}
.member {
	display: flex;
	flex-direction: column;
	gap: 0.75rem;
	padding: 0.75rem 1rem;
	border: 1px solid rgba(255, 255, 255, 0.08);
	border-radius: 0.5rem;
	background: rgba(255, 255, 255, 0.02);
}
.memberTop {
	display: flex;
	align-items: center;
	cursor: pointer;
	justify-content: space-between;
	gap: 0.75rem;
	border-color: rgba(255, 255, 255, 0.25);
	background: rgba(255, 255, 255, 0.05);
	/* add padding or hover effect if needed */
}
.memberTop h3 {
	margin: 0;
	font-size: 1rem;
	font-weight: 600;
	color: #fff;
}
.actionButton {
	display: inline-flex;
	align-items: center;
	gap: 0.4rem;
	font-size: 0.75rem;
	font-weight: 600;
	padding: 0.45rem 0.7rem;
	border-radius: 0.4rem;
	background: rgba(var(--badColor-rgb), 0.5);
	color: #fff;
	border: 1px solid rgba(255, 255, 255, 0.15);
	cursor: pointer;
	transition: 0.15s background;
}
.actionButton:hover {
	background: rgba(var(--badColor-rgb), 0.65);
}
.items {
	list-style: none;
	margin: 0;
	padding: 0;
	display: flex;
	flex-direction: column;
	gap: 0.4rem;
}
.item {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: 0.75rem;
	padding: 0.4rem 0.5rem;
	border-radius: 0.35rem;
	background: rgba(255, 255, 255, 0.03);
}
.itemName {
	flex: 1;
	min-width: 0;
	font-size: 0.85rem;
	color: #fff;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}
.itemRight {
	display: flex;
	align-items: center;
	gap: 0.5rem;
}
.itemPrice {
	font-size: 0.7rem;
	color: rgba(255, 255, 255, 0.6);
}
.itemPrice .share {
	font-size: 0.85rem;
	font-weight: 600;
	color: #fff;
	margin-right: 0.15rem;
}
.payItemButton {
	display: grid;
	place-items: center;
	padding: 0.35rem 0.45rem;
	border-radius: 0.4rem;
	border: 1px solid rgba(255, 255, 255, 0.15);
	background: rgba(var(--badColor-rgb), 0.55);
	color: #fff;
	cursor: pointer;
	transition: 0.15s background;
}
.payItemButton:hover {
	background: rgba(var(--badColor-rgb), 0.7);
}
.total {
	display: flex;
	justify-content: space-between;
	align-items: center;
	border-top: 1px solid rgba(255, 255, 255, 0.08);
	padding-top: 0.5rem;
	margin-top: 0.25rem;
	font-size: 0.75rem;
	color: rgba(255, 255, 255, 0.7);
}
.totalPrice {
	font-size: 1rem;
	font-weight: 700;
	color: var(--badColor);
}
/* removed accentPulse animation */
@media (max-width: 768px) {
	.dashboard {
		padding: 0.75rem;
		padding-bottom: 6rem;
	}
	.summaryBar {
		grid-template-columns: repeat(3, 1fr);
	}
	.member {
		padding: 0.6rem 0.75rem;
	}
	.title {
		font-size: 1.1rem;
	}
}
